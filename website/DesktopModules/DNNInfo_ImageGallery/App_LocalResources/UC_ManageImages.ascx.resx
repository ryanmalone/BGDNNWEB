<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAddImage.Text" xml:space="preserve">
    <value>Add Image</value>
  </data>
  <data name="btnReturn.Text" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="DeleteImage.Text" xml:space="preserve">
    <value>Delete image</value>
  </data>
  <data name="ImageRequired.Text" xml:space="preserve">
    <value>You need to upload an image</value>
  </data>
  <data name="InvalidImage.Text" xml:space="preserve">
    <value>Please upload a valid image (only jpg, gif, and png is allowed) or .zip files</value>
  </data>
  <data name="lblAlbum.Help" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="lblAlbum.Text" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="lblImage.Help" xml:space="preserve">
    <value>Image file</value>
  </data>
  <data name="lblImage.Text" xml:space="preserve">
    <value>Image file</value>
  </data>
  <data name="lblImageDescription.Help" xml:space="preserve">
    <value>Image description</value>
  </data>
  <data name="lblImageDescription.Text" xml:space="preserve">
    <value>Image description</value>
  </data>
  <data name="lblImageTitle.Help" xml:space="preserve">
    <value>Image title</value>
  </data>
  <data name="lblImageTitle.Text" xml:space="preserve">
    <value>Image title</value>
  </data>
  <data name="lblPublished.Help" xml:space="preserve">
    <value>Only ticked images will be viewable on the site</value>
  </data>
  <data name="lblPublished.Text" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="lblSortIndex.Help" xml:space="preserve">
    <value>Image sort index based on lowest number</value>
  </data>
  <data name="lblSortIndex.Text" xml:space="preserve">
    <value>Sort Index</value>
  </data>
  <data name="NewImage.Text" xml:space="preserve">
    <value>New image has been added</value>
  </data>
  <data name="NoImages.Text" xml:space="preserve">
    <value>No images are found</value>
  </data>
  <data name="RemoveImage.Text" xml:space="preserve">
    <value>Remove Image</value>
  </data>
  <data name="reqAlbum.Text" xml:space="preserve">
    <value>Album is required</value>
  </data>
  <data name="SelectAlbum.Text" xml:space="preserve">
    <value>Select album</value>
  </data>
  <data name="Upload.Text" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="GridCancelButton.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="GridDeleteButton.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="GridEditButton.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="GridUpdateButton.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="litZipNote.Text" xml:space="preserve">
    <value>If you upload an image zip file, they will be automatically decompressed and resized. By default Dotnetnuke configuration in web.config only allows 8192 kb for upload. Make sure the file size is under this size otherwise you will get a connection reset or timeout. </value>
  </data>
  <data name="DeleteConfirm.Text" xml:space="preserve">
    <value>Are you sure you want to delete this image?</value>
  </data>
  <data name="NoImagesInZipFile.Text" xml:space="preserve">
    <value>There are no images found in zip file</value>
  </data>
  <data name="btnDeleteSelectedImage.Text" xml:space="preserve">
    <value>Delete Selected Images</value>
  </data>
  <data name="DeleteSelectedImages.Text" xml:space="preserve">
    <value>Are you sure you want to delete selected images?</value>
  </data>
  <data name="litImages.Text" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="litImageList.Text" xml:space="preserve">
    <value>Image List</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Manage Images</value>
  </data>
  <data name="TotalImages.Text" xml:space="preserve">
    <value>image(s) found</value>
  </data>
  <data name="lblImageURL.Help" xml:space="preserve">
    <value>This will be the image url, you can link to specific url when a user click this image</value>
  </data>
  <data name="lblImageURL.Text" xml:space="preserve">
    <value>Image URL</value>
  </data>
  <data name="lblImageURLExternal.Help" xml:space="preserve">
    <value>If you tick this, it will open new browser to display the url</value>
  </data>
  <data name="lblImageURLExternal.Text" xml:space="preserve">
    <value>External URL</value>
  </data>
  <data name="litNote.Text" xml:space="preserve">
    <value>Note: Image URL and External URL fields are only used if you choose SlidingGallery, S3Slider, Nivo Slider and Diapo Gallery as your gallery type </value>
  </data>
  <data name="btnPublishSelectedImage.Text" xml:space="preserve">
    <value>Publish Selected Images</value>
  </data>
  <data name="btnUnpublishSelectedImage.Text" xml:space="preserve">
    <value>Unpublish Selected Images</value>
  </data>
  <data name="PublishSelectedImages.Text" xml:space="preserve">
    <value>Are you sure you want to publish selected images?</value>
  </data>
  <data name="UnpublishSelectedImages.Text" xml:space="preserve">
    <value>Are you sure you want to unpublish selected images?</value>
  </data>
</root>