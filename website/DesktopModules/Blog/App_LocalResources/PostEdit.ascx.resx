<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCopyright.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="lblSummary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;Blog - Edit Post&lt;/h1&gt;
&lt;p&gt;Here is where the user can create, edit and delete blog posts.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Post date&lt;/b&gt;&lt;br /&gt;This is the date when the Post will be published. This date can be the actual date, a future date or a past date. If a future date is used, the Post will not be displayed until the date is met.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Parent blog&lt;/b&gt;&lt;br /&gt;If child blogs have been created under the parent blog, here the user can chose if the Post should be posted under one of those blogs. It is possible to post the Post to the parent blog as well.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Title&lt;/b&gt;&lt;br /&gt;This is the Post title, that will be displayed in the Post list and at the top of the Post itself.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;&lt;br /&gt;The summary may feature a sinthetic abstract of the Post content&lt;/p&gt;&lt;p&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;br /&gt;Here is added the Post content.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Published&lt;/b&gt;&lt;br /&gt;The Post will not be displayed until this checkbox is checked. This is useful when the Post is still a draft, and needs to be finished before being displayed.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Allow users to comment on this Post&lt;/b&gt;&lt;br /&gt;Here the blog owner can override the blog settings and decide if his/her readers will be allowed to post comments on this specific Post.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Display copyright notice at the bottom of your Post&lt;/b&gt;&lt;br /&gt;if checked, the copyright notice entered in Blog Settings is shown at the end of the Post.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Trackback Url&lt;/b&gt;&lt;br /&gt;This field is available only if Trackback auto discovery is not selected under Blog Settings. This is the URL that will be notified of the Trackback.&lt;/p&gt;</value>
  </data>
  <data name="lblAllowComments.Help" xml:space="preserve">
    <value>Allow users to comment on this Post (overrides Blog Setting)</value>
  </data>
  <data name="valPost.ErrorMessage" xml:space="preserve">
    <value>Post is Required</value>
  </data>
  <data name="lblDisplayCopyright.Help" xml:space="preserve">
    <value>If checked, displays a copyright notice at the bottom of your Post.</value>
  </data>
  <data name="lblCategories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="lblTags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="lblAllowComments.Text" xml:space="preserve">
    <value>Enable Comments</value>
  </data>
  <data name="lblDisplayCopyright.Text" xml:space="preserve">
    <value>Display Copyright</value>
  </data>
  <data name="AddTags.Text" xml:space="preserve">
    <value>start typing to associate tags</value>
  </data>
  <data name="lblPublishDate.Text" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="ControlTitle_Postedit.Text" xml:space="preserve">
    <value>Edit Post</value>
  </data>
  <data name="Publishing.Text" xml:space="preserve">
    <value>Publishing Details</value>
  </data>
  <data name="lblPublished.Help" xml:space="preserve">
    <value>Select to publish. Deselect to unpublish (i.e. to make invisible to others).</value>
  </data>
  <data name="lblPublished.Text" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="cmdImageRemove.Text" xml:space="preserve">
    <value>Remove Image</value>
  </data>
  <data name="lblImage.Help" xml:space="preserve">
    <value>You can specify an image to be associated with this blog.</value>
  </data>
  <data name="lblImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="cmdSave.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lblSummaryPrecedingWarning.Text" xml:space="preserve">
    <value>Note that the summary precedes the article body! You edit them independently on this page but they are merged to form the article body when someone views the full article.</value>
  </data>
  <data name="lblLocale.Help" xml:space="preserve">
    <value>Select the language this post is written in.</value>
  </data>
  <data name="lblLocale.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Content.Text" xml:space="preserve">
    <value>Contents</value>
  </data>
  <data name="Metadata.Text" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Title and Summary</value>
  </data>
  <data name="PublishTimeZoneNote.Text" xml:space="preserve">
    <value>The publish date is based on your profile timezone of: </value>
  </data>
  <data name="ctlTags.PlaceholderText" xml:space="preserve">
    <value>Enter the tags for this post here ...</value>
  </data>
  <data name="DefaultLocale.Text" xml:space="preserve">
    <value>&lt; Default Blog Language &gt;</value>
  </data>
  <data name="Title.Required" xml:space="preserve">
    <value>A title is required for the post</value>
  </data>
</root>